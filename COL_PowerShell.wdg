#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_PowerShell
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1cebbfed00021242
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     code : |1-
      
     type : 720896
  procedures :
   -
     name : PSExécuteScript
     internal_properties : CAAAAAgAAACQcynCkCF1Ai++ZXAmMqsIZxKTv5mEl5nzf7P0G3bw474Zx9LNqHINlygKZnMmxTzf5VD+3O466cBU9z0pr0jAXrY4shcSvhxbsOsfyO45fSfhJ238HvcR2ILbOBvKdtfN83oCw8foQfSkZs34qQUaft/aaDy9QyJ0PItUYsOlJ7uZ7q9sVEQluJksN6JP2SrfkWHpzCCwiy/iaWtZxy6xNTrwLQmBHDj5FBUmg+9ynFZPEZeRiMwZ0ooWKWIGB3MxZXMuyTaonnwVJB0xyZ1Y2ns0rL39xWRdN/SLlmxX3xjDPYfgOJOxOOwqc9Gb5Q==
     procedure_id : 2083970277217342018
     type_code : 15
     code : |1-
      // Résumé : Exécute un script PowerShell localement. /!\ Attention : le programme doit avoir les droits administrateurs
      // Syntaxe :
      //[ <Résultat> = ] PSExécuteScript (<sScript> est chaîne [, <bForceMode64bits> est booléen])
      //
      // Paramètres :
      //	sScript (chaîne ANSI) : Script PowerShell à exécuter
      //	bForceMode64bits (booléen - valeur par défaut=0) : Force le mode 64 bits quand on est en 32 bits
      // Valeur de retour :
      // 	multi-valeur : Booléen : Vrai si le script a été exécuté, Faux sinon | Chaîne : Journal d'exécution
      //
      PROCEDURE PSExécuteScript( local sScript est une chaine, bForceMode64bits est un booléen = faux ) : ( booléen, chaine )
      	
      	// Génère deux noms de fichiers temporaires
      	sFichierJournal est une chaine = fExtraitChemin( fFichierTemp( "", sysrep( srAppDataCommun ) ), fDisque + fRépertoire + fFichier ) + ".log"
      	sFichierScript est une chaine = fExtraitChemin( fFichierTemp( "", sysrep( srAppDataCommun ) ), fDisque + fRépertoire + fFichier ) + ".ps1"
      	sFichierCmd est une chaine = fExtraitChemin( fFichierTemp( "", sysrep( srAppDataCommun ) ), fDisque + fRépertoire + fFichier ) + ".cmd"
      	
      	// Sauvegarde le script
      	fSauveTexte( sFichierScript, [
      	[%sScript%]
      	] )
      	
      	// Si le script ne peut pas être sauvegardé
      	si ErreurDétectée ALORS
      				
      		// Remonte l'erreur
      		ErreurPropage()
      		renvoyer ( faux, "" )
      	FIN
      	
      	
      	// Crée la ligne de commande générique
      	sLigneCommande est une chaine
      
      	// Force l'exécution de Windows PowerShell en X64 si on est en 32 bits sur un Windows X64 
      	// (utile pour les modules WebAdministration qui ne fonctionnent qu'en 64 bits)
      	si bForceMode64bits _et_ EnMode64bits() = faux _et_ SysVersionWindows( sysProcesseur ) = "64" ALORS
      		sLigneCommande = [
      			"[%SysRep(srWindows)%]\sysnative\WindowsPowerShell\v1.0\powershell.exe"
      		]
      	sinon
      		// Exécute le PowerSell de l'environnement courant
      		sLigneCommande = [
      			powershell.exe
      		]
      	FIN
      	
      	// Complète la ligne de commande
      	sLigneCommande += [
      	 -NoLogo -NoProfile -NonInteractive -ExecutionPolicy RemoteSigned -OutputFormat Text -File "[%sFichierScript%]"
      	]
      	
      	bLanceAppli est un booléen = faux
      	
      	// Sauvegarde le script CMD
      	fSauveTexte( sFichierCmd, [
      	[%sLigneCommande%] > "[%sFichierJournal%]"
      	] )
      		
      	// Si le script ne peut pas être sauvegardé
      	SI ErreurDétectée ALORS
      		
      		// Remonte l'erreur
      		ErreurPropage()
      		RENVOYER ( Faux, "" )
      	FIN
      	
      	// Lancer la console Windows avec le script CMD à exécuter
      	bLanceAppli = LanceAppli( sFichierCmd, exeIconise, exeBloquant )
      		
      	si bLanceAppli = faux alors
      	
      		sErreurInfo est une chaine = erreurinfo
      	
      		// Nettoie les fichiers
      		PSNettoie()
      	
      		// Remonte l'erreur
      		ErreurDéclenche( 500, "Impossible de lancer la commande " + [ rc ] + sErreurInfo )
      		RENVOYER ( Faux, "" )
      	FIN
      	
      	
      	
      	// Charge le journal
      	sJournal est une chaine = oemversansi( fchargetexte( sFichierJournal , foansi ) )
      		
      	
      	// Si une erreur PowerShell a eu lieu, le journal contient le détail de l'erreur renvoyée
      	// et jusqu'à la version 3.0, on obtient un texte du genre : "Au caractère <nom du fichier script>:<ligne> : <colonne>"
      	
      	// Si on a la séquence d'erreur
      	si sJournal [=] "[%sFichierScript%]" ALORS
      	
      		// Nettoie les fichiers
      		PSNettoie()
      		
      		// Déclenche l'erreur et abandonne
      		ErreurDéclenche( 500, "L'exécution du script a échoué : " + [ rc ] + sJournal )
      		renvoyer ( faux, sJournal )
      	FIN
      	
      	// Nettoie les fichiers
      	PSNettoie()
      	soit bERR = ( ErreurDétectée )	// Annule ErreurDétectée
      	
      renvoyer ( vrai, SansCaractère(sJournal, RC,sscExtérieur))
      
      		Procédure interne PSNettoie()
      			// Supprime les fichiers
      			si fFichierExiste( sFichierCmd ) alors fsupprime( sFichierCmd )
      			si fFichierExiste( sFichierScript ) alors fsupprime( sFichierScript )
      			si fFichierExiste( sFichierJournal ) alors fsupprime( sFichierJournal )
      		fin
     type : 458752
   -
     name : PowerShellDisponible
     procedure_id : 2087711056294365724
     type_code : 15
     code : |1-
      PROCEDURE PowerShellDisponible()
      
      renvoyer fRépertoireExiste("[%SysRep(srWindows)%]\System32\WindowsPowerShell")
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x1cebbfed000412ce
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
